CLL	    // Clear History


//> Mifare Reader for eval-board v1.1:
//> ----------------------------------

SR 01 0F    // Softreset

SLP 20

//> IC Configuration:
//> -----------------
SR 0c 10    // ControlReg - Initiator
SR 15 40    // TxAutoReg
SR 18 85    // RxThresholdReg - MinLevel, CollLevel
// SR 18 55    // RxThresholdReg - MinLevel, CollLevel
SR 19 4D    // DemodReg

// SR 26 48    // RFCfgReg - RxGain 33dB
// SR 26 C9    // RFCfgReg - RxGain 38dB
// SR 26 58    // RFCfgReg - RxGain 38dB
SR 26 68    // RFCfgReg - RxGain 43dB
SR 27 F4    // GsNReg - CWGsN, ModGsN

SR 14 83    // TxControlReg - InvTx2On=1, Tx2RFEn, Tx1RFEn; PN512-PD模块，天线反向
// SR 14 03    // TxControlReg - InvTx2On=1, Tx2RFEn, Tx1RFEn; PN512-PL & PN512-SQ 模块，天线同向

//> Start Transceive:
//> -----------------
SR 01 0c    // CommandReg - transceive
SLP 10

//> Mifare Request:
//> ---------------
SR 0a 80    // flush FIFO
SR 09 26    // FIFO - Request code
RE 0a 01    // Read FIFOLevel

SR 0d 87    // BitframingReg - StartSend, TxLastBits

SLP 2	

//> Response ATQ:
//> -------------
GR 06       // Read ErrReg
RE 0a 02    // Read FIFOLevel
GR 09       // ATQ LSB
GR 09       // ATQ MSB

//> Mifare Anticoll:
//> ----------------
SR 0a 80    // flush FIFO
SR 09 93    // fast activation of Mifare 
SR 09 20    // NVB byte (nothing known)

SR 0d 80    // BitframingReg - StartSend, TxLastBits

SLP 10

//>         Response SNR:
GR 06       // Read ErrReg
RE 0a 05    // Read FIFOLevel
GR 09       // Read SNR 0
MOV ML0 IOR // copy byte 0 to merker
GR 09       // Read SNR 1
MOV ML1 IOR // copy byte 1 to merker
GR 09       // Read SNR 2
MOV ML2 IOR // copy byte 2 to merker
GR 09       // Read SNR 3
MOV ML3 IOR // copy byte 3 to merker
GR 09       // Read SNR 4 (check byte)
MOV ML4 IOR // copy byte 4 to merker


//> Mifare Select:
//> --------------
SR 0a 80    // flush FIFO
SR 09 93    // fast activation of Mifare 
SR 09 70    // NVB byte
SR 12 80    // TxMode: activate CRC
SR 13 80    // RxMode: activate CRC
SR 09 ML0   // Write SNR 0
SR 09 ML1   // Write SNR 1
SR 09 ML2   // Write SNR 2
SR 09 ML3   // Write SNR 3
SR 09 ML4   // Write SNR 4 (check byte)

SR 0d 80    // BitframingReg - StartSend, TxLastBits
SLP 10

//>         Response SAK:
GR 06       // Read ErrReg
RE 0a 01    // Read FIFOLevel
GR 09       // Read SAK

MOV ML0 IOR 	// copy byte 0 to merker

JNE ML0 08 UL	// SAK == 0x08 ?	
//> Response SAK: 0x08 -> Mifare 1k detected
JMP end

::: UL		
JNE ML0 04 default	// SAK == 0x04 ?	
//> Response SAK: 0x04 Mifare UL (UltraLight) detected
JMP end

::: default		
//> Response SAK: 
//# ML0 
//> unknown card type

::: end